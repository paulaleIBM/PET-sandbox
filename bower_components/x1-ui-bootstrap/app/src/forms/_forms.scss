/* FORMS =======================*/
label {
	margin-bottom: 3px;
	padding-right: 15px;
	font-weight: inherit;
}

//hide default close icon for all inputs in IE
input::-ms-clear {
	display: none;
}

.form-group.required .control-label:before {
	content: "* ";
	color: $red;
}

// Form groups
//
// Designed to help with the organization and spacing of vertical forms. For
// horizontal forms, use the predefined grid classes.

.form-group {
	margin-bottom: 10px;
	position: relative;
}

.form-control {
	display: block;
	width: 100%;
	height: $input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
	padding: $padding-base-vertical $padding-base-horizontal;
	font-size: $font-size-base;
	line-height: $input-line-height-base;
	color: $input-color;
	background-color: $input-bg;
	background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
	border: 1px solid $input-border;
	border-radius: 0; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
	@include box-shadow(none);
	@include transition(border-color ease-in-out .15s, box-shadow ease-in-out .15s);

	// Customize the `:focus` state to imitate native WebKit styles.
//	@include form-control-focus;
	&:focus {
		border-color: $input-border-focus;
		outline: 0;
		@include box-shadow(none);

		&:hover {
			border-color: $input-border-focus;
		}
	}

	// Placeholder
	@include placeholder;

	// Disabled and read-only inputs
	//
	// HTML5 says that controls under a fieldset > legend:first-child won't be
	// disabled if the fieldset is disabled. Due to implementation difficulty, we
	// don't honor that edge case; we style them as disabled anyway.
	&[disabled],
	&[readonly],
	fieldset[disabled] & {
		cursor: $cursor-disabled;
		background-color: $input-bg-disabled;
		opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
	}

	&:hover {
		border-color: $input-border-hover;
		@include box-shadow(none);
	}

	// [converter] extracted textarea& to textarea.form-control
}
// Reset height for `textarea`s
textarea.form-control {
	min-height: 68px;
	height: auto;
	line-height: normal;
}

// Search inputs in iOS
//
// This overrides the extra rounded corners on search inputs in iOS so that our
// `.form-control` class can properly style them. Note that this cannot simply
// be added to `.form-control` as it's not specific enough. For details, see
// https://github.com/twbs/bootstrap/issues/11586.

input[type="search"] {
	-webkit-appearance: none;
	height: $input-height-small;
	line-height: $input-height-small;
	border-radius: $input-search-border-radius;
	border-width: 1px 1px 2px 1px;
	padding: 0 30px;

	+ .glyphicon-search {
		position: absolute;
		font-size: $font-size-base;
		line-height: $input-height-small;
		color: $input-color;
		left: 10px;
		top: 0;

		+ .glyphicon-remove {
			position: absolute;
			font-size: $font-size-base;
			line-height: $input-height-small;
			color: $input-color;
			right: 10px;
			top: 0;
			cursor: pointer;
		}
	}
}


// Checkboxes and radios
.checkbox-bg-dark,
.radio-bg-dark{
	background-color: $gray50;

	.radio input[type="radio"],
	.radio-inline input[type="radio"],
	.checkbox input[type="checkbox"],
	.checkbox-inline input[type="checkbox"] {
		&:checked + span::before {
			border-color: transparent;
		}
		&:hover + span::before,
		&:focus + span::before {
			border-color: transparent;
		}
		&:disabled + span::before {
			background-color: $gray20;
			border-color: transparent;
		}
		+ span {
			color: $white;

			&::before {
				border-color: transparent;
			}
		}
	}
}
.radio,
.checkbox {
	label {
		padding: 0;
	}
}
.radio-inline,
.checkbox-inline,
.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
	margin: 10px 20px 10px 0;
	padding: 0;
}
.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
	opacity: 0;
	margin: 0;

	&:checked + span::before {
		background-color: $white;
		border-color: $gray40;
	}
	&:hover + span::before,
	&:focus + span::before {
		background-color: $brand-primary-10;
		border-color: $brand-primary;
	}
	&:disabled + span {
		color: $gray20;

		&::before {
			background-color: mix($gray10, $white, 25%);
			border-color: $gray20;
		}
	}
	+ span::before {
		@include square(19px);
		display: inline-block;
		position: relative;
		background-color: $white;
		border: 1px solid $gray40;
		margin-right: 10px;
		content: '';
	}
}
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
	&:checked + span::after {
		@extend .glyphicon;
		content: $glyphicon-ok;
		position: absolute;
		font-size: 16px;
		top: 5px;
		left: 2px;
		color: $brand-primary;
		font-weight: bold;
	}
	+ span::before {
		border-radius: $border-radius-base;
		top: .25em;
	}
}
.radio input[type="radio"],
.radio-inline input[type="radio"] {
	&:checked + span::after {
		@include square(13px);
		content: '';
		position: absolute;
		top: 8px;
		left: 3px;
		display: inline-block;
		background-color: $teal40;
		border-radius: 100%;
	}
	+ span::before {
		border-radius: 100%;
		top: 5px;
	}
}

// Form control sizing
//
// Build on `.form-control` with modifier classes to decrease or increase the
// height and font-size of form controls.
//
// The `.form-group-* form-control` variations are sadly duplicated to avoid the
// issue documented in https://github.com/twbs/bootstrap/issues/15074.

@include input-size('.input-sm', $input-height-small, $padding-small-vertical, $padding-small-horizontal, $font-size-small, $input-height-small, 0);
.form-group-sm {

	@include input-size('.form-control', $input-height-small, $padding-small-vertical, $padding-small-horizontal, $font-size-small, $input-height-small, 0);

	.form-control-static {
		height: $input-height-small;
		padding: $padding-small-vertical $padding-small-horizontal;
		font-size: $font-size-base;
		line-height: $input-height-small;
	}
}
@include input-size('.input-lg', $input-height-large, $padding-large-vertical, $padding-large-horizontal, $font-size-large, $input-height-large, 0);
.form-group-lg {

	@include input-size('.form-control', $input-height-large, $padding-large-vertical, $padding-large-horizontal, $font-size-large, $input-height-large, 0);

	.form-control-static {
		height: $input-height-large;
		padding: $padding-large-vertical $padding-large-horizontal;
		font-size: $font-size-large;
		line-height: $input-height-large;
	}
}